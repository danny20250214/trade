{"remainingRequest":"/home/admin/code/trade/ruoyi-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/admin/code/trade/ruoyi-ui/src/views/system/product/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/admin/code/trade/ruoyi-ui/src/views/system/product/index.vue","mtime":1741509016941},{"path":"/home/admin/code/trade/ruoyi-ui/node_modules/cache-loader/dist/cjs.js","mtime":1741670326252},{"path":"/home/admin/code/trade/ruoyi-ui/node_modules/babel-loader/lib/index.js","mtime":1741670326995},{"path":"/home/admin/code/trade/ruoyi-ui/node_modules/cache-loader/dist/cjs.js","mtime":1741670326252},{"path":"/home/admin/code/trade/ruoyi-ui/node_modules/vue-loader/lib/index.js","mtime":1741670323792}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/system/product","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n      <el-form-item label=\"产品名称\" prop=\"name\">\n        <el-input\n          v-model=\"queryParams.name\"\n          placeholder=\"请输入产品名称\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"产品编码\" prop=\"code\">\n        <el-input\n          v-model=\"queryParams.code\"\n          placeholder=\"请输入产品编码\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['system:product:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['system:product:edit']\"\n        >修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          plain\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['system:product:remove']\"\n        >删除</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"warning\"\n          plain\n          icon=\"el-icon-download\"\n          size=\"mini\"\n          @click=\"handleExport\"\n          v-hasPermi=\"['system:product:export']\"\n        >导出</el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"productList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"产品编号\" align=\"center\" prop=\"id\" />\n      <el-table-column label=\"产品编码\" align=\"center\" prop=\"code\" />\n      <el-table-column label=\"产品名称\" align=\"center\" prop=\"name\" />\n      <el-table-column label=\"产品排序\" align=\"center\" prop=\"sort\" />\n      <el-table-column label=\"状态\" align=\"center\" prop=\"status\">\n        <template slot-scope=\"scope\">\n          <dict-tag :options=\"dict.type.sys_normal_disable\" :value=\"scope.row.status\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.createTime) }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n            v-hasPermi=\"['system:product:edit']\"\n          >修改</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n            v-hasPermi=\"['system:product:remove']\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改产品对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-row>\n          <el-col :span=\"24\" v-if=\"form.categoryId !== 0\">\n            <el-form-item label=\"上级类别\" prop=\"parentId\">\n              <treeselect v-model=\"form.categoryId\" :options=\"categoryOptions\" :normalizer=\"normalizer\" placeholder=\"选择上级类别\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n        <el-form-item label=\"产品名称\" required>\n          <el-input v-model=\"form.name\" placeholder=\"请输入产品名称\" />\n        </el-form-item>\n        <el-form-item label=\"产品编码\" required>\n          <el-input v-model=\"form.code\" placeholder=\"请输入产品编码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"产品标题\" required>\n          <el-input v-model=\"form.title\" placeholder=\"请输入产品标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"产品排序\">\n          <el-input-number v-model=\"form.sort\" controls-position=\"right\" :min=\"0\" />\n        </el-form-item>\n        <!-- 图片上传部分 -->\n        <el-form-item label=\"产品图片\" prop=\"images\">\n          <el-upload\n            class=\"upload-demo\"\n            action=\"/dev-api/common/upload\"\n            :headers=\"headers\"\n            list-type=\"picture-card\"\n            :file-list=\"fileList\"\n            :on-preview=\"handlePictureCardPreview\"\n            :on-remove=\"handleRemove\"\n            :on-success=\"handleUploadSuccess\"\n            :before-upload=\"beforeUpload\"\n            accept=\"image/*\"\n            multiple>\n            <i class=\"el-icon-plus\"></i>\n          </el-upload>\n          <!-- 图片预览对话框 -->\n          <el-dialog :visible.sync=\"dialogVisible\" append-to-body>\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n          </el-dialog>\n        </el-form-item>\n        <el-form-item label=\"产品内容\" required>\n          <quill-editor ref=\"myQuillEditor\" v-model=\"form.context\"\n                        :options=\"editorOptions\"\n          ></quill-editor>\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listProduct, getProduct, delProduct, addProduct, updateProduct } from \"@/api/system/product\";\nimport { quillEditor } from \"vue-quill-editor\";\nimport \"quill/dist/quill.snow.css\"; // Quill 样式\nimport { Message } from \"element-ui\";\nimport axios from \"axios\";\nimport {getToken} from \"@/utils/auth\";\nimport data from \"@/views/system/dict/data\";\nimport {listCategory} from \"@/api/system/category\";\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\n\nexport default {\n  components: { quillEditor,Treeselect},\n  name: \"Product\",\n  dicts: ['sys_normal_disable'],\n  data() {\n    return {\n      // 上传相关数据\n      fileList: [],\n      dialogImageUrl: '',\n      dialogVisible: false,\n      headers: {\n        Authorization: 'Bearer ' + getToken()\n      },\n      // 重新渲染表格状态\n      refreshTable: true,\n      // 是否展开，默认全部展开\n      isExpandAll: true,\n      categoryOptions: [],\n      quillInstance : null,\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 产品表格数据\n      productList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        code: undefined,\n        name: undefined\n      },\n      // 表单参数\n      form: {\n        context: \"\",\n        categoryId: undefined,\n        images: [], // 存储图片URL数组\n      },\n      editorOptions: {\n        theme: \"snow\",\n        modules: {\n          toolbar: {\n            container: [[\"bold\", \"italic\", \"underline\"], [\"image\"]],\n            handlers: {\n              image: () =>  {\n                let fileInput = document.createElement(\"input\");\n                fileInput.setAttribute(\"type\", \"file\");\n                fileInput.setAttribute(\"accept\", \"image/*\");\n                fileInput.click();\n\n                fileInput.onchange = async () => {\n                  let file = fileInput.files[0];\n                  if (file) {\n                    let formData = new FormData();\n                    formData.append(\"file\", file);\n\n                    // 发送到后端\n                    try {\n                      let res = await axios.post(\"/dev-api/common/upload\", formData, {\n                        headers: { \"Content-Type\": \"multipart/form-data\" ,\"Authorization\":'Bearer ' + getToken()}\n                      });\n\n                      let imageUrl = res.data.url;\n                      let quill = this.$refs.myQuillEditor.quill;\n                      // 获取编辑器实例，并插入图片\n                      let range = quill.getSelection();\n                      quill.insertEmbed(range.index, \"image\", imageUrl);\n                    } catch (error) {\n                      console.error(\"上传失败\", error);\n                    }\n                  }\n                };\n              }\n            }}}\n          },\n      // 表单校验\n      rules: {\n        categoryId: [\n          { required: true, message: \"上级类别不能为空\", trigger: \"blur\" },\n        ],\n        images: [\n          { required: true, message: '请上传产品图片', trigger: 'change' }\n        ],\n        name: [\n          { required: true, message: \"产品名称不能为空\", trigger: \"blur\" }\n        ],\n        code: [\n          { required: true, message: \"产品编码不能为空\", trigger: \"blur\" }\n        ],\n        sort: [\n          { required: true, message: \"产品顺序不能为空\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  created() {\n    this.getList();\n    this.getCategoryTree();\n  },\n  methods: {\n    // 上传前的验证\n    beforeUpload(file) {\n      const isImage = file.type.startsWith('image/');\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isImage) {\n        this.$message.error('上传文件只能是图片格式!');\n        return false;\n      }\n      if (!isLt2M) {\n        this.$message.error('上传图片大小不能超过 2MB!');\n        return false;\n      }\n      return true;\n    },\n    // 修改上传成功的处理方法\n    handleUploadSuccess(response, file, fileList) {\n      if (response.code === 200) {\n        // 确保 form.images 是数组\n        if (!Array.isArray(this.form.images)) {\n          this.form.images = [];\n        }\n        this.form.images.push(response.url);\n        this.fileList = fileList; // 更新文件列表\n        this.$message.success('图片上传成功');\n      } else {\n        this.$message.error(response.msg || '上传失败');\n        // 从文件列表中移除上传失败的文件\n        const index = fileList.indexOf(file);\n        if (index > -1) {\n          fileList.splice(index, 1);\n        }\n      }\n    },\n\n\n  handleRemove(file, fileList) {\n    // 从 fileList 中移除文件\n    this.fileList = fileList;\n    \n    // 从 form.images 中移除对应的 URL\n    const fileUrl = file.response ? file.response.url : file.url;\n    const index = this.form.images.indexOf(fileUrl);\n    if (index > -1) {\n      this.form.images.splice(index, 1);\n  }\n  \n  // 打印检查\n  console.log('当前图片列表:', this.form.images);\n  console.log('当前文件列表:', this.fileList);\n},\n\n    // 预览图片\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    getCategoryTree() {\n      this.loading = true;\n      listCategory(undefined).then(response => {\n        this.categoryOptions = this.handleTree(response.data, \"id\");\n        this.loading = false;\n      });\n    },\n    /** 转换类别数据结构 */\n    normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children;\n      }\n      return {\n        id: node.id,\n        label: node.name,\n        children: node.children\n      };\n    },\n    /** 查询产品列表 */\n    getList() {\n      this.loading = true;\n      listProduct(this.queryParams).then(response => {\n        this.productList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: undefined,\n        code: undefined,\n        name: undefined,\n        sort: 0,\n        status: \"0\",\n        remark: undefined,\n        categoryId: undefined,\n        images: [], // 重置图片数组\n      };\n      this.fileList = []; // 重置上传文件列表\n      this.dialogImageUrl = ''; // 重置预览图片\n      this.dialogVisible = false; // 重置预览对话框\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.id)\n      this.single = selection.length!=1\n      this.multiple = !selection.length\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.getCategoryTree();\n\n      this.open = true;\n      this.title = \"添加产品\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const id = row.id || this.ids\n      getProduct(id).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.title = \"修改产品\";\n        // 如果后端返回的图片是字符串，需要转换为数组\n        if (typeof this.form.images === 'string') {\n          this.form.images = this.form.images.split(',');\n        }\n        // 构建文件列表\n        this.fileList = this.form.images.map(url => ({\n          name: url.substring(url.lastIndexOf('/') + 1),\n          url: url\n        }));\n      });\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          this.form.context = btoa(unescape(encodeURIComponent(this.form.context)));\n          // 将图片数组转换为字符串\n          this.form.images = this.form.images.join(',');\n          if (this.form.id != undefined) {\n            updateProduct(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n\n          } else {\n            addProduct(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n          try {\n            this.form.context = decodeURIComponent(escape(atob(this.form.context)));\n            // 还原图片数组\n            this.form.images = this.form.images.split(',');\n          } catch (error) {\n            console.error(\"Base64 解码失败\", error);\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const ids = row.id || this.ids;\n      this.$modal.confirm('是否确认删除产品编号为\"' + ids + '\"的数据项？').then(function() {\n        return delProduct(ids);\n      }).then(() => {\n        this.getList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download('system/product/export', {\n        ...this.queryParams\n      }, `product_${new Date().getTime()}.xlsx`)\n    }\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  padding: 20px;\n}\n\n.upload-demo {\n  width: 100%;\n}\n\n.upload-demo .el-upload {\n  margin-right: 10px;\n}\n\n.upload-demo .el-upload-list--picture-card .el-upload-list__item {\n  width: 100px;\n  height: 100px;\n}\n\n.el-upload--picture-card {\n  width: 100px;\n  height: 100px;\n  line-height: 100px;\n}\n\n.el-upload-list--picture-card {\n  display: inline;\n  margin: 0;\n}\n\n.dialog-content {\n  max-height: calc(100vh - 200px);\n  overflow-y: auto;\n}\n\n.product-dialog {\n  display: flex;\n  flex-direction: column;\n}\n\n.product-dialog .el-dialog__body {\n  flex: 1;\n  overflow: auto;\n}\n</style>\n"]}]}